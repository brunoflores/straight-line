prog: TIMES
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT TIMES
##
## Ends in an error in state: 1.
##
## stm -> PRINT . LPAREN separated_nonempty_list(COMMA,exp) RPAREN [ SEMICOLON EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN TIMES
##
## Ends in an error in state: 2.
##
## stm -> PRINT LPAREN . separated_nonempty_list(COMMA,exp) RPAREN [ SEMICOLON EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN TIMES
##
## Ends in an error in state: 3.
##
## exp -> LPAREN . exp RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> LPAREN . stm COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID SEMICOLON
##
## Ends in an error in state: 5.
##
## exp -> ID . [ TIMES RPAREN PLUS MINUS DIV ]
## stm -> ID . ASSIGN exp [ COMMA ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN TIMES
##
## Ends in an error in state: 6.
##
## stm -> ID ASSIGN . exp [ SEMICOLON EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID RPAREN
##
## Ends in an error in state: 8.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON PLUS MINUS EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON PLUS MINUS EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON PLUS MINUS EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON PLUS MINUS EOF DIV COMMA ]
## stm -> ID ASSIGN exp . [ SEMICOLON EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID TIMES TIMES
##
## Ends in an error in state: 9.
##
## exp -> exp TIMES . exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS TIMES
##
## Ends in an error in state: 11.
##
## exp -> exp PLUS . exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS ID PRINT
##
## Ends in an error in state: 12.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp PLUS exp . [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID DIV TIMES
##
## Ends in an error in state: 13.
##
## exp -> exp DIV . exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS TIMES
##
## Ends in an error in state: 15.
##
## exp -> exp MINUS . exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS ID PRINT
##
## Ends in an error in state: 16.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp MINUS exp . [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID SEMICOLON
##
## Ends in an error in state: 17.
##
## exp -> LPAREN stm . COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 8, spurious reduction of production stm -> ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID COMMA TIMES
##
## Ends in an error in state: 18.
##
## exp -> LPAREN stm COMMA . exp RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID COMMA ID SEMICOLON
##
## Ends in an error in state: 19.
##
## exp -> LPAREN stm COMMA exp . RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN INT SEMICOLON
##
## Ends in an error in state: 21.
##
## exp -> LPAREN exp . RPAREN [ TIMES SEMICOLON RPAREN PLUS MINUS EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID SEMICOLON
##
## Ends in an error in state: 25.
##
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## separated_nonempty_list(COMMA,exp) -> exp . [ RPAREN ]
## separated_nonempty_list(COMMA,exp) -> exp . COMMA separated_nonempty_list(COMMA,exp) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID COMMA TIMES
##
## Ends in an error in state: 26.
##
## separated_nonempty_list(COMMA,exp) -> exp COMMA . separated_nonempty_list(COMMA,exp) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## exp COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID TIMES
##
## Ends in an error in state: 28.
##
## stm -> ID . ASSIGN exp [ SEMICOLON EOF ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID COMMA
##
## Ends in an error in state: 29.
##
## separated_nonempty_list(SEMICOLON,stm) -> stm . [ EOF ]
## separated_nonempty_list(SEMICOLON,stm) -> stm . SEMICOLON separated_nonempty_list(SEMICOLON,stm) [ EOF ]
##
## The known suffix of the stack is as follows:
## stm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 8, spurious reduction of production stm -> ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID SEMICOLON TIMES
##
## Ends in an error in state: 30.
##
## separated_nonempty_list(SEMICOLON,stm) -> stm SEMICOLON . separated_nonempty_list(SEMICOLON,stm) [ EOF ]
##
## The known suffix of the stack is as follows:
## stm SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

