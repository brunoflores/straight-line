prog: TIMES
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: SEMICOLON TIMES
##
## Ends in an error in state: 1.
##
## nonempty_list(SEMICOLON) -> SEMICOLON . [ PRINT ID ]
## nonempty_list(SEMICOLON) -> SEMICOLON . nonempty_list(SEMICOLON) [ PRINT ID ]
##
## The known suffix of the stack is as follows:
## SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT TIMES
##
## Ends in an error in state: 3.
##
## stm -> PRINT . LPAREN separated_nonempty_list(COMMA,exp) RPAREN [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN TIMES
##
## Ends in an error in state: 4.
##
## stm -> PRINT LPAREN . separated_nonempty_list(COMMA,exp) RPAREN [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN TIMES
##
## Ends in an error in state: 5.
##
## exp -> LPAREN . exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> LPAREN . stm COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID SEMICOLON
##
## Ends in an error in state: 7.
##
## exp -> ID . [ TIMES RPAREN PLUS MINUS DIV ]
## stm -> ID . ASSIGN exp [ COMMA ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN TIMES
##
## Ends in an error in state: 8.
##
## stm -> ID ASSIGN . exp [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID RPAREN
##
## Ends in an error in state: 10.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## stm -> ID ASSIGN exp . [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID TIMES TIMES
##
## Ends in an error in state: 11.
##
## exp -> exp TIMES . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS TIMES
##
## Ends in an error in state: 13.
##
## exp -> exp PLUS . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS ID LPAREN
##
## Ends in an error in state: 14.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp PLUS exp . [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID DIV TIMES
##
## Ends in an error in state: 15.
##
## exp -> exp DIV . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS TIMES
##
## Ends in an error in state: 17.
##
## exp -> exp MINUS . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS ID LPAREN
##
## Ends in an error in state: 18.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp MINUS exp . [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID SEMICOLON
##
## Ends in an error in state: 19.
##
## exp -> LPAREN stm . COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 10, spurious reduction of production stm -> ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID COMMA TIMES
##
## Ends in an error in state: 20.
##
## exp -> LPAREN stm COMMA . exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID ASSIGN ID COMMA ID SEMICOLON
##
## Ends in an error in state: 21.
##
## exp -> LPAREN stm COMMA exp . RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN INT SEMICOLON
##
## Ends in an error in state: 23.
##
## exp -> LPAREN exp . RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID SEMICOLON
##
## Ends in an error in state: 27.
##
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV COMMA ]
## separated_nonempty_list(COMMA,exp) -> exp . [ RPAREN ]
## separated_nonempty_list(COMMA,exp) -> exp . COMMA separated_nonempty_list(COMMA,exp) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID COMMA TIMES
##
## Ends in an error in state: 28.
##
## separated_nonempty_list(COMMA,exp) -> exp COMMA . separated_nonempty_list(COMMA,exp) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## exp COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID TIMES
##
## Ends in an error in state: 30.
##
## stm -> ID . ASSIGN exp [ SEMICOLON PRINT ID EOF ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID COMMA
##
## Ends in an error in state: 32.
##
## nonempty_list(sep_statements) -> sep_statements . [ EOF ]
## nonempty_list(sep_statements) -> sep_statements . nonempty_list(sep_statements) [ EOF ]
##
## The known suffix of the stack is as follows:
## sep_statements
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 10, spurious reduction of production stm -> ID ASSIGN exp
## In state 31, spurious reduction of production sep_statements -> stm
##

<YOUR SYNTAX ERROR MESSAGE HERE>

