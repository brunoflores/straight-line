prog: TIMES
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT TIMES
##
## Ends in an error in state: 1.
##
## stm -> PRINT . LPAREN list(sep_exps) RPAREN [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN TIMES
##
## Ends in an error in state: 2.
##
## stm -> PRINT LPAREN . list(sep_exps) RPAREN [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN TIMES
##
## Ends in an error in state: 3.
##
## exp -> LPAREN . exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> LPAREN . stm COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN ID SEMICOLON
##
## Ends in an error in state: 5.
##
## exp -> ID . [ TIMES RPAREN PLUS MINUS DIV ]
## stm -> ID . ASSIGN exp [ COMMA ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN TIMES
##
## Ends in an error in state: 6.
##
## stm -> ID ASSIGN . exp [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID RPAREN
##
## Ends in an error in state: 8.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON PRINT PLUS MINUS ID EOF DIV COMMA ]
## stm -> ID ASSIGN exp . [ SEMICOLON PRINT ID EOF COMMA ]
##
## The known suffix of the stack is as follows:
## ID ASSIGN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID TIMES TIMES
##
## Ends in an error in state: 9.
##
## exp -> exp TIMES . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp TIMES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS TIMES
##
## Ends in an error in state: 11.
##
## exp -> exp PLUS . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID PLUS ID ASSIGN
##
## Ends in an error in state: 12.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp PLUS exp . [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp PLUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID DIV TIMES
##
## Ends in an error in state: 13.
##
## exp -> exp DIV . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS TIMES
##
## Ends in an error in state: 15.
##
## exp -> exp MINUS . exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN ID MINUS ID ASSIGN
##
## Ends in an error in state: 16.
##
## exp -> exp . PLUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp MINUS exp . [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . DIV exp [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## exp MINUS exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN PRINT LPAREN RPAREN SEMICOLON
##
## Ends in an error in state: 17.
##
## exp -> LPAREN stm . COMMA exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN PRINT LPAREN RPAREN COMMA TIMES
##
## Ends in an error in state: 18.
##
## exp -> LPAREN stm COMMA . exp RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN PRINT LPAREN RPAREN COMMA ID SEMICOLON
##
## Ends in an error in state: 19.
##
## exp -> LPAREN stm COMMA exp . RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN stm COMMA exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID ASSIGN LPAREN INT SEMICOLON
##
## Ends in an error in state: 21.
##
## exp -> LPAREN exp . RPAREN [ TIMES SEMICOLON RPAREN PRINT PLUS MINUS LPAREN INT ID EOF DIV COMMA ]
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS DIV ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS DIV ]
##
## The known suffix of the stack is as follows:
## LPAREN exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID COMMA TIMES
##
## Ends in an error in state: 23.
##
## list(sep_exps) -> sep_exps . list(sep_exps) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## sep_exps
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN ID SEMICOLON
##
## Ends in an error in state: 25.
##
## exp -> exp . PLUS exp [ TIMES RPAREN PLUS MINUS LPAREN INT ID DIV COMMA ]
## exp -> exp . MINUS exp [ TIMES RPAREN PLUS MINUS LPAREN INT ID DIV COMMA ]
## exp -> exp . TIMES exp [ TIMES RPAREN PLUS MINUS LPAREN INT ID DIV COMMA ]
## exp -> exp . DIV exp [ TIMES RPAREN PLUS MINUS LPAREN INT ID DIV COMMA ]
## sep_exps -> exp . [ RPAREN LPAREN INT ID ]
## sep_exps -> exp . COMMA [ RPAREN LPAREN INT ID ]
##
## The known suffix of the stack is as follows:
## exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: ID TIMES
##
## Ends in an error in state: 29.
##
## stm -> ID . ASSIGN exp [ SEMICOLON PRINT ID EOF ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN RPAREN COMMA
##
## Ends in an error in state: 30.
##
## sep_stmts -> stm . [ PRINT ID EOF ]
## sep_stmts -> stm . nonempty_list(SEMICOLON) [ PRINT ID EOF ]
##
## The known suffix of the stack is as follows:
## stm
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: PRINT LPAREN RPAREN SEMICOLON TIMES
##
## Ends in an error in state: 31.
##
## nonempty_list(SEMICOLON) -> SEMICOLON . [ PRINT ID EOF ]
## nonempty_list(SEMICOLON) -> SEMICOLON . nonempty_list(SEMICOLON) [ PRINT ID EOF ]
##
## The known suffix of the stack is as follows:
## SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

